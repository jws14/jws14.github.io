{
  "hash": "d6ceeefdf0a81a8d6a0364e46da1b720",
  "result": {
    "markdown": "---\ntitle: \"danl200-hw5-Sun-Jeremy\"\neditor: visual\n---\n\n\n##Q1A\n\n#Github repository link https://github.com/jws14/jws14.github.io\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(skimr)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\n```\n:::\n\n\n##Q2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nNFL2022_stuffs <- read_csv('https://bcdanl.github.io/data/NFL2022_stuffs.csv')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 50147 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): game_id, posteam\ndbl (8): play_id, drive, week, qtr, down, half_seconds_remaining, pass, wp\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n\n##Q2A\n\n\n::: {.cell}\n\n```{.r .cell-code}\nNFL2022_stuffs <-  NFL2022_stuffs %>% \n  filter(!is.na(posteam))\n```\n:::\n\n\n##Q2B\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary_data <-  NFL2022_stuffs %>% \n  filter(wp > .2 & wp < .75,\n         down <=2,\n         half_seconds_remaining > 120) %>% \n  group_by(posteam) %>% \n  summarize(mean_pass = mean(pass, na.rm = TRUE))\n```\n:::\n\n\n##Q2C\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary_graph <- summary_data %>% \n  mutate(posteam = reorder(posteam, mean_pass))\n\nggplot(summary_graph, aes(x= mean_pass, y = posteam)) +\n  geom_point() \n```\n\n::: {.cell-output-display}\n![](danl200-hw5-Sun-Jeremy_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n##Q2D\n\n\n::: {.cell}\n\n```{.r .cell-code}\nNFL2022_epa <- read_csv('https://bcdanl.github.io/data/NFL2022_epa.csv')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 46427 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): game_id, posteam, receiver, passer\ndbl (3): play_id, drive, epa\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nNFL2022_stuffs_EPA <-  bind_cols( NFL2022_stuffs, NFL2022_epa %>% \n                                    select(passer, receiver, epa))\nNFL2022_stuffs_EPA <-  NFL2022_stuffs_EPA %>% \n  filter(!is.na(passer))\n```\n:::\n\n\n##Q2E\n\n\n::: {.cell}\n\n```{.r .cell-code}\npasser_data <-  NFL2022_stuffs_EPA %>% \n  filter(passer %in% c( \"J.Allen\", \"P.Mahomes\"))\nmean_epa <-  passer_data %>% \n  group_by( week, passer) %>% \n  summarize(mean_epa = mean(epa, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'week'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\nggplot(passer_data, aes(x = week, y = epa, color = passer)) +\n  geom_line() +\n  scale_color_manual(values = c(\"J.Allen\" = 'blue', \"P.Mahomes\"\n                                = 'red'))\n```\n\n::: {.cell-output-display}\n![](danl200-hw5-Sun-Jeremy_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n##Q2F\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspread_data <- mean_epa %>% \n  spread(passer, mean_epa)\nspread_data <- spread_data %>% \n  mutate(diff_JALLEN_PMAHOME = J.Allen - P.Mahomes)\n```\n:::\n",
    "supporting": [
      "danl200-hw5-Sun-Jeremy_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}